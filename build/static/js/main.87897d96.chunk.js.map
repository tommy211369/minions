{"version":3,"sources":["App.module.css","logo.png","Components/Header/Header.js","store/actions.js","Components/Commander/Commander.js","App-base.js","store/reducers/minions.js","store/reducers/save.js","index.js","Components/Header/Header.module.css","Components/Commander/Commander.module.css"],"names":["module","exports","Header","className","classes","src","logo","alt","actions","CREATE_MINION","DESTROY_MINION","CREATE_TEAM","DESTROY_TEAM","SAVE","connect","state","minions","minion","dispatch","createMinion","type","actionTypes","destroyMinion","createTeam","value","destroyTeam","save","props","Commander","onClick","message","history","console","log","map","result","Date","id","toLocaleString","App","content","initialState","reducer","action","toString","concat","combineReducers","minionsReducer","saveReducer","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87897d96.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"content\":\"App_content__3La4L\",\"minions\":\"App_minions__9tzVM\",\"message\":\"App_message__2vrzR\",\"result\":\"App_result__3tsSR\"};","export default __webpack_public_path__ + \"static/media/logo.7c3054de.png\";","import React from 'react';\nimport logo from '../../logo.png';\nimport classes from './Header.module.css';\n\nfunction Header() {\n    return (\n        <header className={classes.Header}>\n            <img src={logo} alt=\"logo\" />\n        </header>\n    );\n}\n\nexport default Header;","const actions = {\n  CREATE_MINION: \"CREATE_MINION\",\n  DESTROY_MINION: \"DESTROY_MINION\",\n  CREATE_TEAM: \"CREATE_TEAM\",\n  DESTROY_TEAM: \"DESTROY_TEAM\",\n  SAVE: \"SAVE\",\n};\n\nexport default actions;\n","import React from \"react\";\nimport classes from \"./Commander.module.css\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport actionTypes from \"../../store/actions\";\n\nfunction Commander(props) {\n  return (\n    <div className={classes.Commander}>\n      <button onClick={props.createMinion}>Créer un minion</button>\n      <button onClick={props.destroyMinion}>Détruire un minion</button>\n      <button onClick={() => props.createTeam(5)}>\n        Créer une équipe de 5 minions\n      </button>\n      <button onClick={() => props.destroyTeam(5)}>\n        Détruire une équipe de 5 minions\n      </button>\n      <button onClick={() => props.save(props.minions)}>\n        Stocker le nombre d'infiltrés\n      </button>\n    </div>\n  );\n}\n\n// Abonnement au state\nconst mapStateToProps = (state) => {\n  return {\n    minions: state.minion.minions,\n  };\n};\n\n// Récupération des actions\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createMinion: () => dispatch({ type: actionTypes.CREATE_MINION }),\n    destroyMinion: () => dispatch({ type: actionTypes.DESTROY_MINION }),\n    createTeam: (value) =>\n      dispatch({ type: actionTypes.CREATE_TEAM, value: value }),\n    destroyTeam: (value) =>\n      dispatch({ type: actionTypes.DESTROY_TEAM, value: value }),\n    save: (value) => dispatch({ type: actionTypes.SAVE, value: value }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Commander);\n","import React from \"react\";\nimport classes from \"./App.module.css\";\n\n// Composants\nimport Header from \"./Components/Header/Header\";\nimport Commander from \"./Components/Commander/Commander\";\n\n// Redux\nimport { connect } from \"react-redux\";\n\nfunction App(props) {\n  let history;\n  console.log(\"minions : \", props.minions);\n  console.log(\"message : \", props.message);\n\n  if (props.history && props.history !== \"\") {\n    history = props.history.map((result) => (\n      <div key={result.id} className={classes.result}>\n        <span>\n          <b>{result.value}</b> infiltrés\n        </span>\n        Le {new Date(result.id).toLocaleString(\"fr-FR\")}\n      </div>\n    ));\n  }\n\n  return (\n    <div className={classes.App}>\n      <Header />\n\n      <div className=\"container\">\n        <div className={classes.content}>\n          <h1>À la conquête du monde</h1>\n          <div className={classes.minions}>\n            <span>{props.minions}</span>\n            minions infiltrés\n          </div>\n        </div>\n\n        {props.message ? (\n          <p className={classes.message}>{props.message}</p>\n        ) : null}\n\n        <Commander />\n\n        {props.history && props.history !== \"\" ? (\n          <div className={classes.content}>\n            <h2>Tableau des infiltrations</h2>\n            {history}\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\n// Abonnement au state\nconst mapStatetoProps = (state) => {\n  return {\n    minions: state.minion.minions,\n    message: state.minion.message,\n    history: state.save.history,\n  };\n};\n\nexport default connect(mapStatetoProps)(App);\n","import actionTypes from \"../actions\";\n\nconst initialState = {\n  minions: 0,\n  message: \"\",\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.CREATE_MINION:\n      return { minions: state.minions + 1, message: \"\" };\n    case actionTypes.DESTROY_MINION:\n      if (state.minions === 0) {\n        return { minions: 0, message: \"Il n'y a plus de minions à détruire !\" };\n      } else {\n        return { minions: state.minions - 1, message: \"\" };\n      }\n    case actionTypes.CREATE_TEAM:\n      return { minions: state.minions + action.value, message: \"\" };\n    case actionTypes.DESTROY_TEAM:\n      if (state.minions === 0) {\n        return { minions: 0, message: \"Il n'y a plus de minions à détruire !\" };\n      } else if (state.minions < action.value.toString()) {\n        return {\n          minions: state.minions,\n          message: \"Il n'y a pas assez de minions à détruire !\",\n        };\n      } else {\n        return {\n          minions: state.minions - action.value,\n          message: \"\",\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import actionTypes from \"../actions\";\n\nconst initialState = {\n  history: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SAVE:\n      return {\n        history: state.history.concat({\n          id: new Date(),\n          value: action.value,\n        }),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App-base\";\n// import App from \"./App-useReducer\";\n\n// Redux\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers } from \"redux\";\nimport minionsReducer from \"./store/reducers/minions\";\nimport saveReducer from \"./store/reducers/save\";\n\n// Combiner les reducers\nconst reducer = combineReducers({\n  minion: minionsReducer,\n  save: saveReducer,\n});\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__LSipP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Commander\":\"Commander_Commander__FeKr0\"};"],"sourceRoot":""}